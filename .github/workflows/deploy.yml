name: Deploy site to Pages

on:
  # Runs on pushes targeting the default branch
  push:

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

  # Run once a day to check if the site is up to date
  schedule:
    - cron: '0 3 * * *' # At 3AM every day

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

env:
  BUILD_PATH: "." # default value when not using subfolders
  YARN_IGNORE_ENGINES: true
  # BUILD_PATH: subfolder

jobs:
  check_pages:
    runs-on: ubuntu-latest
    outputs:
      enabled: ${{ steps.branch.outputs.enabled && steps.check.outputs.enabled }}
    steps:
      - name: Check if this is the default branch
        id: branch
        run: |
          if [ ${{github.ref_name == github.event.repository.default_branch}} == false ]
          then
            echo "::warning:: This is not the default branch, skipping deployment"
            echo "enabled=false" >> $GITHUB_OUTPUT
          else
            echo "enabled=true" >> $GITHUB_OUTPUT
          fi
      - name: Check if Pages are enabled
        if: steps.branch.outputs.enabled == 'true'
        id: check
        run: |
          if ! gh api /repos/$GITHUB_REPOSITORY/pages; then
            echo "::warning:: Pages are disabled, skipping deployment"
            echo "enabled=false" >> $GITHUB_OUTPUT
          else
            echo "enabled=true" >> $GITHUB_OUTPUT
          fi
        env:
          GH_TOKEN: ${{ github.token }}
  build:
    name: Build
    if: needs.check_pages.outputs.enabled == 'true'
    needs: check_pages
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: yarn
          cache-dependency-path: yarn.lock

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v5

      - name: Install dependencies
        run: yarn install

      - name: Fix version
        if: github.ref_name == 'main'
        run: yarn fix-version

      - name: Build Project
        run: yarn deploy ${{ steps.pages.outputs.base_url }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./dist/web-ui/browser

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    needs: build
    runs-on: ubuntu-latest
    name: Deploy

    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
